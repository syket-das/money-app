// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum Status {
  PENDING
  VERIFIED
  REJECTED
  COMPLETED
}

type Address {
  street  String?
  city    String?
  region  String?
  zip     String?
  country String?
}

model User {
  id                    String                 @id @default(auto()) @map("_id") @db.ObjectId
  name                  String
  email                 String                 @unique
  password              String
  role                  Role                   @default(USER)
  phone                 String?
  address               Address?
  createdAt             DateTime               @default(now())
  updatedAt             DateTime               @updatedAt
  ExchangeRate          ExchangeRate[]
  addMoneyRequests      AddMoneyRequest[]
  withdrawMoneyRequests WithdrawMoneyRequest[]

  bankAccounts BankAccount[]
}

model BankAccount {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])
  userId String @db.ObjectId

  bankName          String
  accountHolderName String?
  accountNumber     String
  branchName        String?
  ifscCode          String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model AddMoneyRequest {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])
  userId String @db.ObjectId

  bdt      Float
  verified Boolean @default(false)

  transactionId String?
  accountNumber String?
  method        String?
  message       String?

  status Status @default(PENDING)

  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  exchangeRate   ExchangeRate? @relation(fields: [exchangeRateId], references: [id])
  exchangeRateId String?       @db.ObjectId
}

model WithdrawMoneyRequest {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])
  userId String @db.ObjectId

  exchangeRate   ExchangeRate @relation(fields: [exchangeRateId], references: [id])
  exchangeRateId String       @db.ObjectId

  accountNumber String
  method        String
  message       String?
  ifscCode      String?
  accountHolder String?
  branchName    String?
  status        Status  @default(PENDING)
  verified      Boolean @default(false)

  bdt Float

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model AdminBankAccount {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  bankName          String
  accountHolderName String?
  accountNumber     String
  branchName        String?
  ifscCode          String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ExchangeRate {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  rate Float

  user   User   @relation(fields: [userId], references: [id])
  userId String @db.ObjectId

  createdAt             DateTime               @default(now())
  updatedAt             DateTime               @updatedAt
  addMoneyRequests      AddMoneyRequest[]
  withdrawMoneyRequests WithdrawMoneyRequest[]
}
